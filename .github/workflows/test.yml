name: Test

on:
  push:
    branches: [ main ]
  pull_request:

env:
  GO_VERSION: '1.24.1'
  CGO_ENABLED: 0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: [1.24.1, 1.25]
        os: [ubuntu-latest, ubuntu-20.04]
        exclude:
          # Exclude older Go versions on newer Ubuntu
          - go-version: 1.24.1
            os: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt check
      run: |
        if [ "$(go fmt ./... | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          go fmt ./...
          exit 1
        fi

    - name: Run tests
      run: make test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        args: --timeout=10m
